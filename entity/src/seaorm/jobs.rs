//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "jobs")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub job_id: String,
    pub component_id: String,
    pub header: Option<Json>,
    pub job_detail: Option<Json>,
    pub priority: i32,
    pub expected_runtime: i64,
    pub parallelable: bool,
    pub timeout: i64,
    pub component_url: String,
    pub repeat_number: i32,
    pub interval: i64,
    pub job_name: String,
    pub plan_id: String,
    pub component_type: String,
    pub phase: String,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
